spring.mvc.view.prefix: /WEB-INF/jsp/
spring.mvc.view.suffix: .jsp

## Spring DATASOURCE (DataSourceAutoConfiguration & DataSourceProperties)
 spring.datasource.url = jdbc:postgresql://ec2-54-197-232-203.compute-1.amazonaws.com:5432/derkjedodvgto
 spring.datasource.username = nptyzlqatlvxjc
 spring.datasource.password = 7ac6060c1885eee28000c268fc9354483f5623acff7831dbe2d04620ac5073d2


## Hibernate Properties
# The SQL dialect makes Hibernate generate better SQL for the chosen database  org.hibernate.dialect.MySQLDialect
 spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect
logging.level.org.springframework.jdbc.core.JdbcTemplate=DEBUG
logging.level.org.springframework.jdbc.core.StatementCreatorUtils=TRACE
# Hibernate ddl auto (create, create-drop, validate, update)
spring.jpa.hibernate.ddl-auto = update
spring.jpa.properties.hibernate.id.new_generator_mappings = false
spring.jpa.properties.hibernate.format_sql = true
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE 
spring.jpa.show-sql=false
spring.jpa.generate-ddl=false



#server.port=8090
 spring.jpa.database-platform=org.hibernate.dialect.MySQL5InnoDBDialect
# spring.datasource.url = jdbc:mysql://localhost:3306/demo?createDatabaseIfNotExist=true
# spring.datasource.driverClassName=com.mysql.cj.jdbc.Driver
# spring.datasource.username=demo
# spring.datasource.password=demo



spring.datasource.tomcat.max-wait=20000
spring.datasource.tomcat.max-active=50
spring.datasource.tomcat.max-idle=20
spring.datasource.tomcat.min-idle=15

## MULTIPART (MultipartProperties)
# Enable multipart uploads
spring.servlet.multipart.enabled=true
# Threshold after which files are written to disk.
spring.servlet.multipart.file-size-threshold=2KB
# Max file size.
spring.servlet.multipart.max-file-size=200MB
# Max Request Size
spring.servlet.multipart.max-request-size=215MB

## File Storage Properties
# All files uploaded through the REST API will be stored in this directory
file.upload-dir=/